import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.metrics import ConfusionMatrixDisplay
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.metrics import accuracy_score, confusion_matrix


df = pd.read_csv('news.csv')

x_train, x_test, y_train, y_test = train_test_split(df['text'], df.label, test_size=0.2, random_state=7)


tfidf = TfidfVectorizer(stop_words='english', max_df=0.7)
tfidf_train, tfidf_test = tfidf.fit_transform(x_train), tfidf.transform(x_test)


pac = PassiveAggressiveClassifier(max_iter=50).fit(tfidf_train, y_train)
y_pred = pac.predict(tfidf_test)


score = accuracy_score(y_test, y_pred)
print(f'Accuracy: {round(score*100, 2)}%')


conf_matrix = confusion_matrix(y_test, y_pred)
disp = ConfusionMatrixDisplay(confusion_matrix=conf_matrix, display_labels=['FAKE', 'REAL'])
disp.plot(cmap='Blues', values_format='.0f')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()